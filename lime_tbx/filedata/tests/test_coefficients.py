"""Tests for coefficients module"""

"""___Built-In Modules___"""
from datetime import datetime, timezone
import filecmp
from typing import Tuple, List


"""___Third-Party Modules___"""
import unittest
import numpy as np

"""___LIME_TBX Modules___"""
from .. import coefficients

"""___Authorship___"""
__author__ = "Javier GatÃ³n Herguedas"
__created__ = "09/02/2023"
__maintainer__ = "Javier GatÃ³n Herguedas"
__email__ = "gaton@goa.uva.es"
__status__ = "Development"


COEFF_PATH = "./coeff_data/versions/LIME_MODEL_COEFS_20221201_V01.nc"


def _get_23012023_coeff_data() -> (
    Tuple[List[float], List[float], List[float], List[float]]
):
    data = np.array(
        [
            [
                -2.5530479748250410e00,
                -2.3707939316978339e00,
                -2.0871912394393006e00,
                -1.9755385674670107e00,
                -1.8755318602260456e00,
                -1.5589845885717013e00,
            ],
            [
                -1.1644804015072057e00,
                -1.2444426621449753e00,
                -1.2638890437003925e00,
                -1.1852041113386482e00,
                -1.1996242433894639e00,
                -1.0585825580074870e00,
            ],
            [
                -1.7684314382799868e-02,
                8.1968626869901987e-02,
                1.6116387414780800e-01,
                1.1534466699109774e-01,
                1.5152787026157083e-01,
                9.2553224046277846e-02,
            ],
            [
                -9.6351133299559466e-02,
                -1.2939349276102624e-01,
                -1.6197179121933628e-01,
                -1.4777016003878868e-01,
                -1.6123956977284121e-01,
                -1.5181460661778937e-01,
            ],
            [
                5.2214880724492249e-02,
                5.0112189473624343e-02,
                4.7444695345547731e-02,
                4.9184635324043137e-02,
                5.4033023023838077e-02,
                4.9938226529574865e-02,
            ],
            [
                6.0537991425427332e-03,
                9.9286054555827678e-03,
                1.1198557598745915e-02,
                1.4279120994364241e-02,
                1.2930091098292349e-02,
                7.4778359315260173e-03,
            ],
            [
                -3.7050786569567326e-03,
                -4.7361799168068371e-03,
                -4.2879379421566126e-03,
                -5.5460124123963752e-03,
                -4.8837337737871085e-03,
                -3.0758946582738998e-03,
            ],
            [
                3.3196797889008145e-05,
                2.0887188100440567e-05,
                1.4180382948048348e-04,
                1.6289754437876072e-04,
                1.6756627632858156e-04,
                2.9174419296238216e-04,
            ],
            [
                -8.4137394658941750e-04,
                -9.4976493422076983e-04,
                -9.9301280786623933e-04,
                -1.0145130120162214e-03,
                -1.0130471746324430e-03,
                -8.9331352208824857e-04,
            ],
            [
                7.3331255219892272e-04,
                8.4403413522527674e-04,
                1.0844355934400900e-03,
                1.2330249713063933e-03,
                1.4431215224772276e-03,
                1.1313442003601695e-03,
            ],
            [
                4.2013525285810764e-04,
                5.9229416579907319e-04,
                4.5024173593649879e-04,
                5.5333653892256551e-04,
                4.5785924128457920e-04,
                4.5719003235547470e-04,
            ],
            [
                2.0253143379154310e00,
                2.5443697587184140e00,
                2.1910011037828268e00,
                2.1647686216169699e00,
                2.0717810604155327e00,
                2.2435225417058544e00,
            ],
            [
                3.3715308426441976e-01,
                2.7354599412355229e-01,
                2.0623555447620398e-01,
                1.9374361589734115e-01,
                1.6422207762215088e-01,
                1.1165627418249408e-01,
            ],
            [
                -1.6231252624657948e-03,
                -3.3683377228951217e-03,
                -3.4419357805664744e-03,
                -3.5148045399885103e-03,
                -3.2247287620386427e-03,
                -2.9466059497353912e-03,
            ],
            [
                1.0675433686193667e00,
                1.0675433686193667e00,
                1.0675433686193667e00,
                1.0675433686193667e00,
                1.0675433686193667e00,
                1.0675433686193667e00,
            ],
            [
                1.4326900637038660e01,
                1.4326900637038660e01,
                1.4326900637038660e01,
                1.4326900637038660e01,
                1.4326900637038660e01,
                1.4326900637038660e01,
            ],
            [
                1.4011602024936574e01,
                1.4011602024936574e01,
                1.4011602024936574e01,
                1.4011602024936574e01,
                1.4011602024936574e01,
                1.4011602024936574e01,
            ],
            [
                8.2633743436878468e00,
                8.2633743436878468e00,
                8.2633743436878468e00,
                8.2633743436878468e00,
                8.2633743436878468e00,
                8.2633743436878468e00,
            ],
        ]
    )
    u_data = np.array(
        [
            [
                -9.3865380978976154e-01,
                -7.2186886779706461e-01,
                -7.5464113596917148e-01,
                -7.8991634091724761e-01,
                -8.4053451417596992e-01,
                -9.6309984205026922e-01,
            ],
            [
                -5.1232767511425461e00,
                -3.2733159177100539e00,
                -2.7770537177998400e00,
                -2.7645845903068675e00,
                -2.8387700675717524e00,
                -2.8344081311499658e00,
            ],
            [
                -3.1999762387256612e02,
                4.7519921259789932e01,
                2.0065290025897227e01,
                2.6531199328688686e01,
                2.1561430908814007e01,
                3.0913660115735720e01,
            ],
            [
                -1.8376233572671168e01,
                -9.4937985059905312e00,
                -6.1003192702455227e00,
                -6.3946350979088447e00,
                -6.3838996126192660e00,
                -5.9172066992765986e00,
            ],
            [
                1.8889002933251096e00,
                1.7670499639585957e00,
                1.5578352671248132e00,
                1.4710184303676257e00,
                1.5412479589093666e00,
                1.2306697856367035e00,
            ],
            [
                2.6545063076155422e01,
                1.3837224933538709e01,
                1.0318003698284926e01,
                7.7925134852916607e00,
                1.0285313197282079e01,
                1.3687148603717974e01,
            ],
            [
                -1.7038286244899968e01,
                -1.1136554645218022e01,
                -1.0317640273114154e01,
                -7.5140576007693989e00,
                -1.0316205817259601e01,
                -1.2632728285933675e01,
            ],
            [
                1.2539485215746822e02,
                1.8297341598107477e02,
                2.6102686045218437e01,
                2.2444920751018461e01,
                2.2269054760202984e01,
                1.0922020360425030e01,
            ],
            [
                -4.5298397579649903e00,
                -3.4612143735075707e00,
                -3.3372075173552984e00,
                -2.9119130236675952e00,
                -2.8464654148250532e00,
                -2.9757301033383206e00,
            ],
            [
                5.8658348734600612e00,
                4.5175691409063052e00,
                3.3261364991388600e00,
                3.0149186136645141e00,
                2.5747630890400344e00,
                2.7454326889727074e00,
            ],
            [
                9.3372326149612483e00,
                5.2685211587223142e00,
                6.5058142178136604e00,
                5.0847935907626454e00,
                6.4220096114180265e00,
                5.8475802719101848e00,
            ],
            [
                1.8493860317205563e01,
                5.5888890155147131e00,
                1.0063371583744704e01,
                7.3243770879251668e00,
                5.8942043511150786e00,
                3.8169050788829999e00,
            ],
            [
                7.4452737183227935e00,
                6.0281571838105572e00,
                7.4761363086739392e00,
                7.1846486726723944e00,
                8.2389340927967343e00,
                1.0827005487339580e01,
            ],
            [
                -3.6812415837269462e01,
                -1.3747020627984687e01,
                -1.1130735476505272e01,
                -1.1271698964048529e01,
                -1.3484938486538468e01,
                -1.2990374329030566e01,
            ],
            [
                5.2423370087280052e-01,
                5.2423370087280052e-01,
                5.2423370087280052e-01,
                5.2423370087280052e-01,
                5.2423370087280052e-01,
                5.2423370087280052e-01,
            ],
            [
                4.2026471004086235e-01,
                4.2026471004086235e-01,
                4.2026471004086235e-01,
                4.2026471004086235e-01,
                4.2026471004086235e-01,
                4.2026471004086235e-01,
            ],
            [
                4.1429123250229810e-01,
                4.1429123250229810e-01,
                4.1429123250229810e-01,
                4.1429123250229810e-01,
                4.1429123250229810e-01,
                4.1429123250229810e-01,
            ],
            [
                1.7757717302560505e-01,
                1.7757717302560505e-01,
                1.7757717302560505e-01,
                1.7757717302560505e-01,
                1.7757717302560505e-01,
                1.7757717302560505e-01,
            ],
        ]
    )
    pos_coeff = np.array(
        [
            [
                3.0087992e-03,
                2.7826072e-03,
                2.4671266e-03,
                2.5369900e-03,
                2.4811490e-03,
                2.1353809e-03,
            ],
            [
                1.7788916e-04,
                1.6111167e-04,
                1.4013982e-04,
                1.5044831e-04,
                1.4981405e-04,
                1.2605924e-04,
            ],
            [
                2.5810921e-06,
                2.3312130e-06,
                2.0218231e-06,
                2.2338761e-06,
                2.2389870e-06,
                1.8883310e-06,
            ],
            [
                1.2553000e-08,
                1.1175000e-08,
                9.4679997e-09,
                1.0661000e-08,
                1.0764000e-08,
                9.0979997e-09,
            ],
        ],
        dtype=np.float32,
    )
    neg_coeff = np.array(
        [
            [
                -3.3280931e-03,
                -2.8817353e-03,
                -2.6593732e-03,
                -2.5214751e-03,
                -2.5463700e-03,
                -2.7260771e-03,
            ],
            [
                2.2132843e-04,
                1.8685502e-04,
                1.7031420e-04,
                1.5771961e-04,
                1.5815787e-04,
                1.7119000e-04,
            ],
            [
                -3.4417810e-06,
                -2.8600100e-06,
                -2.6522230e-06,
                -2.4526560e-06,
                -2.4690360e-06,
                -2.8507070e-06,
            ],
            [
                1.8163000e-08,
                1.4778000e-08,
                1.3710000e-08,
                1.2597000e-08,
                1.2675000e-08,
                1.5473001e-08,
            ],
        ],
        dtype=np.float32,
    )
    return data, u_data, pos_coeff, neg_coeff


class TestCoefficients(unittest.TestCase):
    def test_read_coefficients(self):
        cf = coefficients.read_coeff_nc(COEFF_PATH)
        version = "23012023_v1"
        data, u_data, pos, neg = _get_23012023_coeff_data()
        self.assertEqual(cf.version, version)
        rf = cf.reflectance
        for i, arr in enumerate(rf._ds.coeff.values):
            for j, val in enumerate(arr):
                self.assertEqual(val, data[i][j])
        for i, arr in enumerate(rf._ds.u_coeff.values):
            for j, val in enumerate(arr):
                self.assertEqual(val, u_data[i][j])
        pl = cf.polarization
        for i, arr in enumerate(pl.pos_coeffs):
            np.testing.assert_array_equal(arr, pos.T[i])
        for i, arr in enumerate(pl.neg_coeffs):
            np.testing.assert_array_equal(arr, neg.T[i])


if __name__ == "__main__":
    unittest.main()
